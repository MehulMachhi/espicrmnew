"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
import django
from django.utils.encoding import smart_str
django.utils.encoding.smart_text = smart_str

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&ag*6^8&$x@%^7diq$6jo-y-u^0%=2z0d8dpsv)^tzi_9#ot79'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'Master' ,
    'Enquiry' ,
    'Assessment' ,
    'Application' ,
    'DetailEnquiry' ,
    'Accounts' ,
    'Followup' ,
    'Lead' ,
    'jazzmin' ,
    'graphene_django' ,
    'import_export' ,
    'smart_selects' ,
    'rest_framework' ,
    'corsheaders' ,
    'tagging' ,
    'django.contrib.admin' ,
    'django.contrib.auth' ,
    'django.contrib.contenttypes' ,
    'django.contrib.sessions' ,
    'django.contrib.messages' ,
    'django.contrib.staticfiles' ,
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware' ,
    'django.contrib.sessions.middleware.SessionMiddleware' ,
    'django.middleware.common.CommonMiddleware' ,
    'django.middleware.csrf.CsrfViewMiddleware' ,
    'django.contrib.auth.middleware.AuthenticationMiddleware' ,
    'django.contrib.messages.middleware.MessageMiddleware' ,
    'django.middleware.clickjacking.XFrameOptionsMiddleware' ,
]

ROOT_URLCONF = 'core.urls'
USE_DJANGO_JQUERY = True
JQUERY_URL = False

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates' ,
        'DIRS': [] ,
        'APP_DIRS': True ,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug' ,
                'django.template.context_processors.request' ,
                'django.contrib.auth.context_processors.auth' ,
                'django.contrib.messages.context_processors.messages' ,
            ] ,
        } ,
    } ,
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3' ,
        'NAME': BASE_DIR / 'db.sqlite3' ,
    }
}

X_FRAME_OPTIONS = 'SAMEORIGIN'

JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "ESPI-CRM" ,

    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "ESPI-CRM" ,

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "ESPI-CRM" ,

    # Logo to use for your site, must be present in static files, used for brand on top left
    # "site_logo": "https://espiconsultants.com/wp-content/uploads/2022/10/ESPI-X6-Version_02-1.png",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": None ,

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": None ,

    # CSS classes that are applied to the logo above
    # "site_logo_classes": "img-circle",

    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon": None ,

    # Welcome text on the login screen
    "welcome_sign": "Welcome to ESPI-CRM" ,

    # Copyright on the footer
    "copyright": "ANANT SOFT COMPUTING" ,

    # List of model admins to search from the search bar, search bar omitted if excluded
    # If you want to use a single search field you dont need to use a list, you can use a simple string
    # "search_model": ["auth.User", "auth.Group",],
    # "search_model": "Enquiry.enquiry",

    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
    "user_avatar": None ,

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
    "topmenu_links": [

        {"name": "Home" , "url": "admin:index" , "permissions": ["auth.view_user"]} ,

        {
            "name": "Enquiry" ,
            "app": "Enquiry" ,
            "model": "enquiry" ,
            "url": "/admin/Enquiry/enquiry/" ,
        } ,

        {
            "name": "DetailEnquiry" ,
            "app": "DetailEnquiry" ,
            "model": "Detail_Enquiry" ,
            "url": "/admin/DetailEnquiry/detail_enquiry/" ,
        } ,

        {
            "name": "Assessments" ,
            "app": "Assessment" ,
            "model": "assessment" ,
            "url": "/admin/Assessment/assessment/" ,
        } ,

        {
            "name": "Application" ,
            "app": "Application" ,
            "model": "Application" ,
            "url": "/admin/Application/application/" ,
        } ,
        
        {
            "name": "Courses" ,
            "app": "Master" ,
            "model": "course" ,
            "url": "/admin/Master/course/" ,
        } ,
        
        {
            "name": "Universities" ,
            "app": "Master" ,
            "model": "university" ,
            "url": "/admin/Master/university/" ,
        } ,
        
        {
            "name": "Followups" ,
            "app": "Followup" ,
            "model": "followups" ,
            "url": "/admin/Followup/followups/" ,
        } ,
        
        {
            "name": "Lead" ,
            "app": "Leads" ,
            "model": "lead" ,
            "url": "/admin/Lead/lead/add/" ,
        } ,

    ] ,

    # Other Jazzmin settings...

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ("app" url type is not allowed)
    "usermenu_links": [
        {"name": "ESPI" , "url": "https://espiconsultants.com/" , "new_window": True} ,
        {"model": "auth.user"}
    ] ,

    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    "show_sidebar": True ,

    # Whether to aut expand the menu
    "navigation_expanded": True ,

    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": [] ,

    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": [] ,

    
    "icons": {
        "auth": "fas fa-users-cog" ,
        "auth.user": "fas fa-user" ,
        "auth.Group": "fas fa-users" ,
    } ,
    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right" ,
    "default_icon_children": "fas fa-circle" ,

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": True ,

    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": None ,
    "custom_js": None ,
    # Whether to link font from fonts.googleapis.com (use custom_css to supply font otherwise)
    "use_google_fonts_cdn": True ,
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": True ,

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "horizontal_tabs" ,
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {"auth.user": "collapsible" , "auth.group": "vertical_tabs"} ,
    # Add a language dropdown into the admin
    # "language_chooser": True,
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": True,
    "brand_small_text": True,
    "brand_colour": "navbar-pink",
    "accent": "accent-olive",
    "navbar": "navbar-white navbar-light",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-primary",
    "sidebar_nav_small_text": True,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-outline-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "show_ui_builder": True
}

ADMIN_SITE_BASE_URL = 'admin/'

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:3000' ,
]

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000' ,
    'http://localhost:8000' ,
    'http://127.0.0.1:3000' ,
    'http://127.0.0.1:8000' ,
]

CORS_ALLOW_ALL_ORIGINS = True

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator' ,
    } ,
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator' ,
    } ,
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator' ,
    } ,
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator' ,
    } ,
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

# Absolute path to the directory where collectstatic will collect static files for deployment
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Additional locations the staticfiles app will traverse if the FileSystemFinder finder is enabled
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Ensure STATICFILES_FINDERS is set up correctly (usually these are default settings)
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
